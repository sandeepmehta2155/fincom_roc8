{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91704\\\\Desktop\\\\roc8\\\\finvids_roc8\\\\src\\\\Login\\\\SignUp.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function SignUp() {\n  _s();\n\n  const [firstNameAndLastName, setFirstNameAndLastName] = useState(\"\");\n  const [userName, setUserName] = useState(\"\");\n  const [passwordInput, setUserPassword] = useState(\"\");\n  const [passwordReInput, setpasswordReInput] = useState(\"\");\n  const [emailInput, setEmailInput] = useState(\"\");\n  const [emailExists, setEmailExists] = useState(\"none\");\n  const [userExists, setUserExists] = useState(\"none\");\n  const [userAdded, setUserAdded] = useState(\"none\");\n  const [validName, setValidName] = useState(\"none\");\n  const [validUserName, setValidUserName] = useState(\"none\");\n  const [validUserEmail, setValidUserEmail] = useState(\"none\");\n  const [type, setType] = useState(\"password\");\n  const [responseFromDataBase, setResponseFromDataBase] = useState(\"\");\n  const reg = /([0-9])/;\n  useEffect(() => {\n    setUserExists(\"block\");\n    responseFromDataBase === \"user Exists for given username\" ? setUserExists(\"block\") : setUserExists(\"none\");\n    responseFromDataBase === \"Enter valid name\" ? setValidName(\"block\") : setValidName(\"none\");\n    responseFromDataBase === \"Enter valid username\" ? setValidUserName(\"block\") : setValidUserName(\"none\");\n    reg.test(passwordInput) && passwordInput === passwordReInput && responseFromDataBase === \"user added in database\" ? setUserAdded(\"block\") : setUserAdded(\"none\");\n    responseFromDataBase === \"email Exists for given username\" ? setEmailExists(\"block\") : setEmailExists(\"none\");\n    responseFromDataBase === \"Enter valid email\" ? setValidUserEmail(\"block\") : setValidUserEmail(\"none\");\n  }, [responseFromDataBase]);\n\n  async function setResponseFromDB() {\n    await axios.post(\"https://videolib.sandeepmehta215.repl.co/signup\", {\n      fullname: firstNameAndLastName,\n      username: userName,\n      email: emailInput,\n      password: passwordInput\n    }).then(response => {\n      setResponseFromDataBase(response.data.message);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signUpPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Subscribe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Enter your name : \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"txt\",\n      placeholder: \"    First-name Last-name\",\n      onChange: e => setFirstNameAndLastName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n      style: {\n        color: \"red\",\n        display: validName\n      },\n      children: \"Name can't be blank\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Enter your user-name : \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"txt\",\n      placeholder: \"    User name\",\n      onChange: e => setUserName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n      style: {\n        color: \"red\",\n        display: validUserName\n      },\n      children: \"User-name can't be blank\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n      style: {\n        color: \"red\",\n        display: userExists\n      },\n      children: \"User exists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Enter your e-mail : \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      id: \"txt\",\n      placeholder: \"    E-mail\",\n      onChange: e => setEmailInput(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n      style: {\n        color: \"red\",\n        display: emailExists\n      },\n      children: \"Email exists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n      style: {\n        color: \"red\",\n        display: validUserEmail\n      },\n      children: \"Enter Vaid Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Enter your password : \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      id: \"email\",\n      placeholder: \"     Password\",\n      onChange: e => setUserPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Re-enter your password : \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"email\",\n      type: type,\n      placeholder: \"     Password\",\n      onChange: e => setpasswordReInput(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      id: \"shpass\",\n      children: \"Show password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"check\",\n      type: \"checkbox\",\n      onClick: () => {\n        if (type === \"password\") setType(\"text\");else setType(\"password\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), !reg.test(passwordInput) && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"red\"\n      },\n      children: \"Password should contain a number \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), passwordReInput && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: passwordReInput !== passwordInput && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"red\"\n        },\n        children: \" Error! Try matching password \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/login\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"LoginButton\",\n        children: \"Back to Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"SignupButton\",\n      onClick: () => {\n        setResponseFromDB();\n      },\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), console.log(userAdded), /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: \"green\",\n        display: userAdded\n      },\n      children: [\"User Added in database\", /*#__PURE__*/_jsxDEV(\"span\", {\n        role: \"img\",\n        \"aria-labelledby\": \"emoji\",\n        children: \"\\u2705\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignUp, \"E67GdvVA7Khwch/CvvZAVV8pTHE=\");\n\n_c = SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["C:/Users/91704/Desktop/roc8/finvids_roc8/src/Login/SignUp.js"],"names":["useState","useEffect","Link","axios","SignUp","firstNameAndLastName","setFirstNameAndLastName","userName","setUserName","passwordInput","setUserPassword","passwordReInput","setpasswordReInput","emailInput","setEmailInput","emailExists","setEmailExists","userExists","setUserExists","userAdded","setUserAdded","validName","setValidName","validUserName","setValidUserName","validUserEmail","setValidUserEmail","type","setType","responseFromDataBase","setResponseFromDataBase","reg","test","setResponseFromDB","post","fullname","username","email","password","then","response","data","message","e","target","value","color","display","console","log"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nexport function SignUp() {\r\n  const [firstNameAndLastName, setFirstNameAndLastName] = useState(\"\");\r\n\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [passwordInput, setUserPassword] = useState(\"\");\r\n  const [passwordReInput, setpasswordReInput] = useState(\"\");\r\n  const [emailInput, setEmailInput] = useState(\"\");\r\n\r\n  const [emailExists, setEmailExists] = useState(\"none\");\r\n  const [userExists, setUserExists] = useState(\"none\");\r\n  const [userAdded, setUserAdded] = useState(\"none\");\r\n  const [validName, setValidName] = useState(\"none\");\r\n\r\n  const [validUserName, setValidUserName] = useState(\"none\");\r\n\r\n  const [validUserEmail, setValidUserEmail] = useState(\"none\");\r\n  const [type, setType] = useState(\"password\");\r\n  const [responseFromDataBase, setResponseFromDataBase] = useState(\"\");\r\n\r\n  const reg = /([0-9])/;\r\n\r\n  useEffect(() => {\r\n    setUserExists(\"block\");\r\n    responseFromDataBase === \"user Exists for given username\"\r\n      ? setUserExists(\"block\")\r\n      : setUserExists(\"none\");\r\n\r\n    responseFromDataBase === \"Enter valid name\"\r\n      ? setValidName(\"block\")\r\n      : setValidName(\"none\");\r\n\r\n    responseFromDataBase === \"Enter valid username\"\r\n      ? setValidUserName(\"block\")\r\n      : setValidUserName(\"none\");\r\n\r\n    reg.test(passwordInput) &&\r\n    passwordInput === passwordReInput &&\r\n    responseFromDataBase === \"user added in database\"\r\n      ? setUserAdded(\"block\")\r\n      : setUserAdded(\"none\");\r\n\r\n    responseFromDataBase === \"email Exists for given username\"\r\n      ? setEmailExists(\"block\")\r\n      : setEmailExists(\"none\");\r\n\r\n    responseFromDataBase === \"Enter valid email\"\r\n      ? setValidUserEmail(\"block\")\r\n      : setValidUserEmail(\"none\");\r\n  }, [responseFromDataBase]);\r\n\r\n  async function setResponseFromDB() {\r\n    await axios\r\n      .post(\"https://videolib.sandeepmehta215.repl.co/signup\", {\r\n        fullname: firstNameAndLastName,\r\n        username: userName,\r\n        email: emailInput,\r\n        password: passwordInput\r\n      })\r\n      .then((response) => {\r\n        setResponseFromDataBase(response.data.message);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div className=\"signUpPage\">\r\n      <h2>Subscribe</h2>\r\n      <label>Enter your name : </label>\r\n      <input\r\n        type=\"text\"\r\n        id=\"txt\"\r\n        placeholder=\"    First-name Last-name\"\r\n        onChange={(e) => setFirstNameAndLastName(e.target.value)}\r\n      />\r\n      <br />\r\n      <small style={{ color: \"red\", display: validName }}>\r\n        Name can't be blank\r\n      </small>\r\n      <br />\r\n      <br />\r\n      <label>Enter your user-name : </label>\r\n      <input\r\n        type=\"text\"\r\n        id=\"txt\"\r\n        placeholder=\"    User name\"\r\n        onChange={(e) => setUserName(e.target.value)}\r\n      />\r\n      <br />\r\n      <small style={{ color: \"red\", display: validUserName }}>\r\n        User-name can't be blank\r\n      </small>\r\n      <small style={{ color: \"red\", display: userExists }}>User exists</small>\r\n\r\n      <br />\r\n      <label>Enter your e-mail : </label>\r\n\r\n      <input\r\n        type=\"email\"\r\n        id=\"txt\"\r\n        placeholder=\"    E-mail\"\r\n        onChange={(e) => setEmailInput(e.target.value)}\r\n      />\r\n      <br />\r\n      <small style={{ color: \"red\", display: emailExists }}>Email exists</small>\r\n\r\n      <small style={{ color: \"red\", display: validUserEmail }}>\r\n        Enter Vaid Email\r\n      </small>\r\n      <br />\r\n      <br />\r\n\r\n      <label>Enter your password : </label>\r\n      <input\r\n        type=\"password\"\r\n        id=\"email\"\r\n        placeholder=\"     Password\"\r\n        onChange={(e) => setUserPassword(e.target.value)}\r\n      />\r\n      <br />\r\n      <br />\r\n      <label>Re-enter your password : </label>\r\n      <input\r\n        id=\"email\"\r\n        type={type}\r\n        placeholder=\"     Password\"\r\n        onChange={(e) => setpasswordReInput(e.target.value)}\r\n      />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <label id=\"shpass\">Show password</label>\r\n      <input\r\n        id=\"check\"\r\n        type=\"checkbox\"\r\n        onClick={() => {\r\n          if (type === \"password\") setType(\"text\");\r\n          else setType(\"password\");\r\n        }}\r\n      />\r\n\r\n      <br />\r\n      <br />\r\n      <br />\r\n      {!reg.test(passwordInput) && (\r\n        <div style={{ color: \"red\" }}>Password should contain a number </div>\r\n      )}\r\n      <br />\r\n      {passwordReInput && (\r\n        <div>\r\n          {passwordReInput !== passwordInput && (\r\n            <div style={{ color: \"red\" }}> Error! Try matching password </div>\r\n          )}\r\n        </div>\r\n      )}\r\n      <br />\r\n      <Link to=\"/login\">\r\n        <button className=\"LoginButton\">Back to Login</button>\r\n      </Link>\r\n      <button\r\n        className=\"SignupButton\"\r\n        onClick={() => {\r\n          setResponseFromDB();\r\n        }}\r\n      >\r\n        Sign Up\r\n      </button>\r\n      {console.log(userAdded)}\r\n      <span style={{ color: \"green\", display: userAdded }}>\r\n        User Added in database\r\n        <span role=\"img\" aria-labelledby=\"emoji\">\r\n          ✅\r\n        </span>\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}